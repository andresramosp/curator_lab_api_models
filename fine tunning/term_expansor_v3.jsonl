{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dog\", \"tagCollection\": [\"animal\", \"puppy\", \"hound\", \"German shepherd\", \"pet\", \"wild dog\"]}"}, {"role": "assistant", "content": "[\"puppy\", \"hound\", \"German shepherd\", \"wild dog\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"table\", \"tagCollection\": [\"furniture\", \"wooden table\", \"chair\", \"small table\", \"main repairing table\", \"woman repairing furniture\"]}"}, {"role": "assistant", "content": "[\"wooden table\", \"small table\", \"main repairing table\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"long knife\", \"tagCollection\": [\"knife\", \"short knife\", \"long white knife\", \"utensils\", \"sharp blade\"]}"}, {"role": "assistant", "content": "[\"knife\", \"short knife\", \"long white knife\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man playing games\", \"tagCollection\": [\"man playing\", \"boy playing games\", \"man playing chess\", \"games\", \"man working\"]}"}, {"role": "assistant", "content": "[\"man playing chess\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"cat\", \"tagCollection\": [\"feline\", \"kitten\", \"lion\", \"domestic cat\", \"black cat\"]}"}, {"role": "assistant", "content": "[\"kitten\", \"domestic cat\", \"black cat\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"tree\", \"tagCollection\": [\"plant\", \"oak tree\", \"pine tree\", \"forest\", \"bush\"]}"}, {"role": "assistant", "content": "[\"oak tree\", \"pine tree\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"ocean\", \"tagCollection\": [\"sea\", \"water body\", \"Atlantic Ocean\", \"waves\", \"marine life\"]}"}, {"role": "assistant", "content": "[\"sea\", \"Atlantic Ocean\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"bird\", \"tagCollection\": [\"sparrow\", \"eagle\", \"avian\", \"flight\", \"nest\"]}"}, {"role": "assistant", "content": "[\"sparrow\", \"eagle\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"city\", \"tagCollection\": [\"metropolis\", \"village\", \"urban area\", \"capital city\", \"residential neighborhood\"]}"}, {"role": "assistant", "content": "[\"metropolis\", \"capital city\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"musical instrument\", \"tagCollection\": [\"guitar\", \"piano\", \"orchestra\", \"violin\", \"string instrument\"]}"}, {"role": "assistant", "content": "[\"guitar\", \"piano\", \"violin\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"knife\", \"tagCollection\": [\"kitchen knife\", \"butter knife\", \"sharp blade\", \"cutlery\", \"cheese slicer\"]}"}, {"role": "assistant", "content": "[\"kitchen knife\", \"butter knife\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"cooking pot\", \"tagCollection\": [\"stainless steel pot\", \"pressure cooker\", \"pan\", \"kitchenware\", \"lid\"]}"}, {"role": "assistant", "content": "[\"stainless steel pot\", \"pressure cooker\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"spoon\", \"tagCollection\": [\"teaspoon\", \"tablespoon\", \"cutlery\", \"ladle\", \"fork\"]}"}, {"role": "assistant", "content": "[\"teaspoon\", \"tablespoon\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"baking tray\", \"tagCollection\": [\"oven tray\", \"cookie sheet\", \"baking mat\", \"kitchen tool\", \"aluminum foil\"]}"}, {"role": "assistant", "content": "[\"oven tray\", \"cookie sheet\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"coffee machine\", \"tagCollection\": [\"espresso machine\", \"drip coffee maker\", \"electric appliance\", \"coffee grinder\", \"capsule coffee maker\"]}"}, {"role": "assistant", "content": "[\"espresso machine\", \"drip coffee maker\", \"capsule coffee maker\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"vacuum cleaner\", \"tagCollection\": [\"robot vacuum\", \"upright vacuum\", \"cleaning tool\", \"dustbin\", \"vacuum hose\"]}"}, {"role": "assistant", "content": "[\"robot vacuum\", \"upright vacuum\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dishwasher\", \"tagCollection\": [\"built-in dishwasher\", \"portable dishwasher\", \"kitchen appliance\", \"dish rack\", \"washing machine\"]}"}, {"role": "assistant", "content": "[\"built-in dishwasher\", \"portable dishwasher\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"toaster\", \"tagCollection\": [\"pop-up toaster\", \"toaster oven\", \"bread warmer\", \"kitchen gadget\", \"grill\"]}"}, {"role": "assistant", "content": "[\"pop-up toaster\", \"toaster oven\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"microwave\", \"tagCollection\": [\"microwave oven\", \"compact microwave\", \"appliance\", \"food heater\", \"oven\"]}"}, {"role": "assistant", "content": "[\"microwave oven\", \"compact microwave\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"blender\", \"tagCollection\": [\"hand blender\", \"immersion blender\", \"food processor\", \"juicer\", \"electric tool\"]}"}, {"role": "assistant", "content": "[\"hand blender\", \"immersion blender\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"tourist\", \"tagCollection\": [\"local tourist\", \"traveler\", \"visitor\", \"foreign tourist\", \"tourism professional\"]}"}, {"role": "assistant", "content": "[\"local tourist\", \"foreign tourist\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"beach\", \"tagCollection\": [\"sandy beach\", \"beach resort\", \"coastline\", \"seashore\", \"tropical beach\"]}"}, {"role": "assistant", "content": "[\"sandy beach\", \"tropical beach\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"travel destination\", \"tagCollection\": [\"popular travel destination\", \"European city\", \"hidden gem\", \"remote island\", \"tourist hotspot\"]}"}, {"role": "assistant", "content": "[\"popular travel destination\", \"remote island\", \"tourist hotspot\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"mountain\", \"tagCollection\": [\"snowy mountain\", \"hill\", \"mountain range\", \"cliff\", \"hiking trail\"]}"}, {"role": "assistant", "content": "[\"snowy mountain\", \"mountain range\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man taking photo\", \"tagCollection\": [\"man taking selfie\", \"man holding camera\", \"photographer\", \"woman taking photo\", \"tourist taking photo\"]}"}, {"role": "assistant", "content": "[\"man taking selfie\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"tourist attraction\", \"tagCollection\": [\"famous monument\", \"natural wonder\", \"local market\", \"theme park\", \"historic site\"]}"}, {"role": "assistant", "content": "[\"famous monument\", \"historic site\", \"theme park\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"hotel\", \"tagCollection\": [\"luxury hotel\", \"small inn\", \"hostel\", \"accommodation\", \"beachfront hotel\"]}"}, {"role": "assistant", "content": "[\"luxury hotel\", \"small inn\", \"beachfront hotel\", \"hostel\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"cruise\", \"tagCollection\": [\"luxury cruise\", \"river cruise\", \"boat tour\", \"sailing\", \"ocean adventure\"]}"}, {"role": "assistant", "content": "[\"luxury cruise\", \"river cruise\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman climbing\", \"tagCollection\": [\"woman climbing mountain\", \"woman climbing wall\", \"rock climber\", \"hiker\", \"man climbing\"]}"}, {"role": "assistant", "content": "[\"woman climbing mountain\", \"woman climbing wall\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"adventure trip\", \"tagCollection\": [\"safari\", \"trekking adventure\", \"city tour\", \"extreme sports trip\", \"holiday\"]}"}, {"role": "assistant", "content": "[\"trekking adventure\", \"extreme sports trip\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"car\", \"tagCollection\": [\"sports car\", \"electric vehicle\", \"sedan\", \"truck\", \"vehicle\"]}"}, {"role": "assistant", "content": "[\"sports car\", \"sedan\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"taxi\", \"tagCollection\": [\"yellow taxi\", \"cab\", \"ride-sharing car\", \"bus\", \"public transport\"]}"}, {"role": "assistant", "content": "[\"yellow taxi\", \"cab\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"metro station\", \"tagCollection\": [\"subway station\", \"train station\", \"platform\", \"underground metro station\", \"public transit hub\"]}"}, {"role": "assistant", "content": "[\"subway station\", \"underground metro station\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"bus\", \"tagCollection\": [\"city bus\", \"electric bus\", \"coach\", \"school bus\", \"public transport\"]}"}, {"role": "assistant", "content": "[\"city bus\", \"electric bus\", \"school bus\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"traffic light\", \"tagCollection\": [\"red traffic light\", \"green light\", \"pedestrian light\", \"street signal\", \"road sign\"]}"}, {"role": "assistant", "content": "[\"red traffic light\", \"green light\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"driver\", \"tagCollection\": [\"taxi driver\", \"bus driver\", \"truck driver\", \"ride-sharing driver\", \"mechanic\"]}"}, {"role": "assistant", "content": "[\"taxi driver\", \"bus driver\", \"truck driver\", \"ride-sharing driver\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"electric scooter\", \"tagCollection\": [\"electric scooter\", \"rental scooter\", \"bicycle\", \"electric bike\", \"kick scooter\"]}"}, {"role": "assistant", "content": "[\"rental scooter\", \"kick scooter\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man driving car\", \"tagCollection\": [\"man driving sedan\", \"man driving sports car\", \"woman driving car\", \"man holding steering wheel\", \"person driving\"]}"}, {"role": "assistant", "content": "[\"man driving sedan\", \"man driving sports car\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"bicycle\", \"tagCollection\": [\"mountain bike\", \"electric bicycle\", \"road bike\", \"tricycle\", \"two-wheeled vehicle\"]}"}, {"role": "assistant", "content": "[\"mountain bike\", \"electric bicycle\", \"road bike\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"train\", \"tagCollection\": [\"high-speed train\", \"freight train\", \"passenger train\", \"subway\", \"rail transport\"]}"}, {"role": "assistant", "content": "[\"high-speed train\", \"freight train\", \"passenger train\", \"subway\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"shop\", \"tagCollection\": [\"clothing shop\", \"grocery store\", \"boutique\", \"market\", \"shopping mall\"]}"}, {"role": "assistant", "content": "[\"clothing shop\", \"grocery store\", \"boutique\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"people\", \"tagCollection\": [\"crowd\", \"shoppers\", \"family buying groceries\", \"street vendors\", \"tourists\"]}"}, {"role": "assistant", "content": "[\"shoppers\", \"family buying groceries\", \"crowd\", \"street vendors\", \"tourists\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"street market\", \"tagCollection\": [\"flea market\", \"open-air bazaar\", \"fruit stand\", \"mall\", \"local market\"]}"}, {"role": "assistant", "content": "[\"flea market\", \"open-air bazaar\", \"local market\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman buying clothes\", \"tagCollection\": [\"woman trying on dresses\", \"woman in clothing store\", \"man buying clothes\", \"sales assistant\", \"woman shopping\"]}"}, {"role": "assistant", "content": "[\"woman trying on dresses\", \"woman in clothing store\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"mall\", \"tagCollection\": [\"shopping mall\", \"luxury mall\", \"local market\", \"indoor shopping complex\", \"retail center\"]}"}, {"role": "assistant", "content": "[\"shopping mall\", \"luxury mall\", \"indoor shopping complex\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"shopping street\", \"tagCollection\": [\"pedestrian shopping street\", \"luxury shopping avenue\", \"main street market\", \"commercial area\", \"urban street\"]}"}, {"role": "assistant", "content": "[\"pedestrian shopping street\", \"luxury shopping avenue\", \"main street market\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man buying groceries\", \"tagCollection\": [\"man at vegetable stand\", \"man buying fruit\", \"woman buying groceries\", \"cashier\", \"man in supermarket\"]}"}, {"role": "assistant", "content": "[\"man at vegetable stand\", \"man buying fruit\", \"man in supermarket\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"clothing store\", \"tagCollection\": [\"fashion boutique\", \"vintage shop\", \"department store\", \"market\", \"clothing section\"]}"}, {"role": "assistant", "content": "[\"fashion boutique\", \"vintage shop\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"checkout\", \"tagCollection\": [\"self-checkout\", \"checkout counter\", \"cashier\", \"online payment\", \"card terminal\"]}"}, {"role": "assistant", "content": "[\"self-checkout\", \"checkout counter\", \"cashier\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"tourist shopping\", \"tagCollection\": [\"tourists buying souvenirs\", \"luxury shopping\", \"tourist shops\", \"local souvenir markets\", \"mall\"]}"}, {"role": "assistant", "content": "[\"tourists buying souvenirs\", \"tourist shops\", \"local souvenir markets\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"farm\", \"tagCollection\": [\"dairy farm\", \"chicken farm\", \"rural area\", \"farmland\", \"barn\"]}"}, {"role": "assistant", "content": "[\"dairy farm\", \"chicken farm\", \"farmland\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"landscape\", \"tagCollection\": [\"mountain landscape\", \"pastoral view\", \"hilly terrain\", \"valley\", \"rural scenery\"]}"}, {"role": "assistant", "content": "[\"mountain landscape\", \"pastoral view\", \"rural scenery\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"tractor\", \"tagCollection\": [\"modern tractor\", \"farming vehicle\", \"plow\", \"tractor in field\", \"construction vehicle\"]}"}, {"role": "assistant", "content": "[\"modern tractor\", \"tractor in field\", \"farming vehicle\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"countryside\", \"tagCollection\": [\"rural countryside\", \"farmland\", \"forest\", \"village\", \"open fields\"]}"}, {"role": "assistant", "content": "[\"rural countryside\", \"farmland\", \"open fields\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"field\", \"tagCollection\": [\"wheat field\", \"corn field\", \"plowed field\", \"meadow\", \"farm\"]}"}, {"role": "assistant", "content": "[\"wheat field\", \"corn field\", \"plowed field\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"farmer\", \"tagCollection\": [\"dairy farmer\", \"farmer with tractor\", \"farm worker\", \"agricultural professional\", \"shepherd\"]}"}, {"role": "assistant", "content": "[\"dairy farmer\", \"farmer with tractor\", \"farm worker\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"sheep\", \"tagCollection\": [\"flock of sheep\", \"lamb\", \"grazing sheep\", \"goat\", \"pastoral animal\"]}"}, {"role": "assistant", "content": "[\"flock of sheep\", \"grazing sheep\", \"lamb\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"barn\", \"tagCollection\": [\"red barn\", \"livestock barn\", \"storage barn\", \"farm\", \"shed\"]}"}, {"role": "assistant", "content": "[\"red barn\", \"livestock barn\", \"storage barn\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"river\", \"tagCollection\": [\"stream\", \"mountain river\", \"lake\", \"waterway\", \"small river\"]}"}, {"role": "assistant", "content": "[\"mountain river\", \"small river\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"harvest\", \"tagCollection\": [\"corn harvest\", \"wheat harvest\", \"manual harvest\", \"farming season\", \"tractor during harvest\"]}"}, {"role": "assistant", "content": "[\"corn harvest\", \"wheat harvest\", \"manual harvest\", \"tractor during harvest\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"street sign\", \"tagCollection\": [\"stop sign\", \"no parking sign\", \"billboard\", \"graffiti\", \"road sign\"]}"}, {"role": "assistant", "content": "[\"stop sign\", \"no parking sign\", \"road sign\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"graffiti\", \"tagCollection\": [\"colorful graffiti\", \"street art\", \"tagged wall\", \"painted wall\", \"political mural\"]}"}, {"role": "assistant", "content": "[\"colorful graffiti\", \"tagged wall\", \"political mural\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"wall drawing\", \"tagCollection\": [\"child's drawing on wall\", \"abstract wall art\", \"painted wall\", \"street art installation\", \"wall sketch\"]}"}, {"role": "assistant", "content": "[\"child's drawing on wall\", \"abstract wall art\", \"wall sketch\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"road markings\", \"tagCollection\": [\"zebra crossing\", \"lane divider\", \"parking spot lines\", \"street painting\", \"directional arrows\"]}"}, {"role": "assistant", "content": "[\"zebra crossing\", \"lane divider\", \"parking spot lines\", \"directional arrows\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"advertising sign\", \"tagCollection\": [\"neon advertising sign\", \"billboard\", \"street poster\", \"shop sign\", \"political banner\"]}"}, {"role": "assistant", "content": "[\"neon advertising sign\", \"street poster\", \"billboard\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"urban symbol\", \"tagCollection\": [\"peace symbol graffiti\", \"company logo on building\", \"directional sign\", \"street art icon\", \"traffic light\"]}"}, {"role": "assistant", "content": "[\"peace symbol graffiti\", \"street art icon\", \"directional sign\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"shop sign\", \"tagCollection\": [\"bakery sign\", \"neon shop sign\", \"store nameboard\", \"billboard\", \"hand-painted sign\"]}"}, {"role": "assistant", "content": "[\"bakery sign\", \"neon shop sign\", \"store nameboard\", \"hand-painted sign\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"directional sign\", \"tagCollection\": [\"arrow sign\", \"lane direction sign\", \"turn left sign\", \"stop sign\", \"traffic circle sign\"]}"}, {"role": "assistant", "content": "[\"arrow sign\", \"lane direction sign\", \"turn left sign\", \"traffic circle sign\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"graffiti art\", \"tagCollection\": [\"elaborate graffiti mural\", \"tagged wall\", \"colorful graffiti\", \"painted building\", \"abstract wall art\"]}"}, {"role": "assistant", "content": "[\"elaborate graffiti mural\", \"colorful graffiti\", \"tagged wall\", \"abstract wall art\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"traffic sign\", \"tagCollection\": [\"speed limit sign\", \"stop sign\", \"yield sign\", \"pedestrian crossing sign\", \"billboard\"]}"}, {"role": "assistant", "content": "[\"speed limit sign\", \"stop sign\", \"yield sign\", \"pedestrian crossing sign\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"party\", \"tagCollection\": [\"birthday party\", \"festival\", \"house party\", \"nightclub\", \"dancing crowd\"]}"}, {"role": "assistant", "content": "[\"birthday party\", \"house party\", \"dancing crowd\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"costume\", \"tagCollection\": [\"elaborate costume\", \"scary costume\", \"clown costume\", \"traditional attire\", \"carnival mask\"]}"}, {"role": "assistant", "content": "[\"elaborate costume\", \"scary costume\", \"clown costume\", \"carnival mask\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"people dancing\", \"tagCollection\": [\"group of dancers\", \"woman dancing salsa\", \"man dancing alone\", \"street performers\", \"crowd cheering\"]}"}, {"role": "assistant", "content": "[\"group of dancers\", \"woman dancing salsa\", \"man dancing alone\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"carnival\", \"tagCollection\": [\"Brazilian carnival\", \"street carnival\", \"masked parade\", \"festival floats\", \"costume contest\"]}"}, {"role": "assistant", "content": "[\"Brazilian carnival\", \"street carnival\", \"masked parade\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"music\", \"tagCollection\": [\"live music\", \"DJ set\", \"festival music\", \"street musician\", \"background music\"]}"}, {"role": "assistant", "content": "[\"live music\", \"festival music\", \"DJ set\", \"street musician\", \"background music\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"parade\", \"tagCollection\": [\"holiday parade\", \"costume parade\", \"military parade\", \"street carnival\", \"marching band\"]}"}, {"role": "assistant", "content": "[\"holiday parade\", \"costume parade\", \"military parade\", \"marching band\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"balloon\", \"tagCollection\": [\"red balloon\", \"party balloon\", \"helium balloon\", \"hot air balloon\", \"decorative balloon\"]}"}, {"role": "assistant", "content": "[\"red balloon\", \"party balloon\", \"helium balloon\", \"decorative balloon\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"drinks\", \"tagCollection\": [\"cocktail\", \"glass of champagne\", \"soft drink\", \"wine bottle\", \"water\"]}"}, {"role": "assistant", "content": "[\"cocktail\", \"glass of champagne\", \"soft drink\", \"wine bottle\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"festival lights\", \"tagCollection\": [\"string lights\", \"neon festival lights\", \"lanterns\", \"fireworks display\", \"glowing decorations\"]}"}, {"role": "assistant", "content": "[\"string lights\", \"neon festival lights\", \"glowing decorations\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"crowd\", \"tagCollection\": [\"cheering crowd\", \"dancing crowd\", \"festival crowd\", \"small gathering\", \"parade attendees\"]}"}, {"role": "assistant", "content": "[\"cheering crowd\", \"dancing crowd\", \"festival crowd\", \"parade attendees\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man sitting alone\", \"tagCollection\": [\"man sitting on a bench\", \"man sitting in a park\", \"woman sitting alone\", \"child sitting\", \"man resting\"]}"}, {"role": "assistant", "content": "[\"man sitting on a bench\", \"man sitting in a park\", \"man resting\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"kid playing\", \"tagCollection\": [\"kid playing soccer\", \"child drawing\", \"kids at a park\", \"child playing alone\", \"teenager playing video games\"]}"}, {"role": "assistant", "content": "[\"kid playing soccer\", \"child playing alone\", \"kids at a park\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman cooking pasta\", \"tagCollection\": [\"woman cooking spaghetti\", \"woman cooking in kitchen\", \"man cooking pasta\", \"woman baking bread\", \"chef preparing food\"]}"}, {"role": "assistant", "content": "[\"woman cooking spaghetti\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man running\", \"tagCollection\": [\"man running a marathon\", \"man jogging\", \"woman running\", \"person walking\", \"man sprinting\"]}"}, {"role": "assistant", "content": "[\"man running a marathon\", \"man jogging\", \"man sprinting\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman reading\", \"tagCollection\": [\"woman reading a book\", \"woman reading on a bench\", \"man reading\", \"child reading a story\", \"person writing\"]}"}, {"role": "assistant", "content": "[\"woman reading book\", \"woman reading on a bench\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"child drawing\", \"tagCollection\": [\"child drawing on paper\", \"child painting\", \"kid playing\", \"teenager drawing graffiti\", \"child coloring\"]}"}, {"role": "assistant", "content": "[\"child drawing on paper\", \"child painting\", \"child coloring\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man fishing\", \"tagCollection\": [\"man fishing on a boat\", \"man fishing in a river\", \"woman fishing\", \"person catching fish\", \"man swimming\"]}"}, {"role": "assistant", "content": "[\"man fishing on a boat\", \"man fishing in a river\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman dancing\", \"tagCollection\": [\"woman dancing salsa\", \"woman dancing at a party\", \"man dancing\", \"group of dancers\", \"child dancing\"]}"}, {"role": "assistant", "content": "[\"woman dancing salsa\", \"woman dancing at a party\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man painting\", \"tagCollection\": [\"man painting a canvas\", \"man painting a house\", \"artist painting outdoors\", \"woman painting\", \"child painting\"]}"}, {"role": "assistant", "content": "[\"man painting a canvas\", \"man painting a house\", \"old man painting outdoors\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman carrying groceries\", \"tagCollection\": [\"woman carrying a shopping bag\", \"woman holding groceries\", \"man carrying groceries\", \"person shopping\", \"woman walking\"]}"}, {"role": "assistant", "content": "[\"woman carrying a shopping bag\", \"woman holding groceries\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"menu\", \"tagCollection\": [\"restaurant menu\", \"digital menu\", \"wine list\", \"menu board\", \"kitchen recipe\"]}"}, {"role": "assistant", "content": "[\"restaurant menu\", \"digital menu\", \"wine list\", \"menu board\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"waiter\", \"tagCollection\": [\"male waiter\", \"female waiter\", \"bartender\", \"restaurant staff\", \"chef\"]}"}, {"role": "assistant", "content": "[\"male waiter\", \"female waiter\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"plate\", \"tagCollection\": [\"ceramic plate\", \"white plate\", \"dirty plate\", \"bowl\", \"serving tray\"]}"}, {"role": "assistant", "content": "[\"ceramic plate\", \"white plate\", \"dirty plate\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"cooking\", \"tagCollection\": [\"cooking pasta\", \"grilling steak\", \"baking bread\", \"food preparation\", \"cleaning kitchen\"]}"}, {"role": "assistant", "content": "[\"cooking pasta\", \"grilling steak\", \"baking bread\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"glass\", \"tagCollection\": [\"wine glass\", \"water glass\", \"broken glass\", \"bottle\", \"cup\"]}"}, {"role": "assistant", "content": "[\"wine glass\", \"water glass\", \"broken glass\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"chef\", \"tagCollection\": [\"head chef\", \"sous chef\", \"pastry chef\", \"kitchen assistant\", \"waiter\"]}"}, {"role": "assistant", "content": "[\"head chef\", \"sous chef\", \"pastry chef\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"table\", \"tagCollection\": [\"dining table\", \"reserved table\", \"empty table\", \"chair\", \"bar counter\"]}"}, {"role": "assistant", "content": "[\"dining table\", \"reserved table\", \"empty table\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"knife\", \"tagCollection\": [\"kitchen knife\", \"steak knife\", \"sharp knife\", \"spoon\", \"fork\"]}"}, {"role": "assistant", "content": "[\"kitchen knife\", \"steak knife\", \"sharp knife\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"order\", \"tagCollection\": [\"food order\", \"takeout order\", \"dinner order\", \"kitchen preparation\", \"customer request\"]}"}, {"role": "assistant", "content": "[\"food order\", \"takeout order\", \"dinner order\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"wine\", \"tagCollection\": [\"red wine\", \"white wine\", \"sparkling wine\", \"champagne\", \"beer\"]}"}, {"role": "assistant", "content": "[\"champagne\", \"red wine\", \"white wine\", \"sparkling wine\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"city\", \"tagCollection\": [\"New York\", \"capital city\", \"metropolitan area\", \"small town\", \"urban district\"]}"}, {"role": "assistant", "content": "[\"New York\", \"capital city\", \"urban district\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"New York\", \"tagCollection\": [\"Manhattan\", \"Brooklyn\", \"NYC\", \"state of New York\", \"Long Island\"]}"}, {"role": "assistant", "content": "[\"Manhattan\", \"Brooklyn\", \"NYC\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"Europe\", \"tagCollection\": [\"Western Europe\", \"Southern Europe\", \"France\", \"Mediterranean region\", \"European Union\"]}"}, {"role": "assistant", "content": "[\"Western Europe\", \"Southern Europe\", \"France\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"USA\", \"tagCollection\": [\"California\", \"Texas\", \"North America\", \"American Midwest\", \"New York\"]}"}, {"role": "assistant", "content": "[\"California\", \"Texas\", \"New York\", \"American Midwest\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"Mediterranean\", \"tagCollection\": [\"Spain\", \"Italy\", \"Greek islands\", \"Middle East\", \"North Africa\"]}"}, {"role": "assistant", "content": "[\"Spain\", \"Italy\", \"Greek islands\", \"North Africa\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"Tokyo\", \"tagCollection\": [\"Shibuya\", \"Akihabara\", \"Japan\", \"Chiyoda\", \"Eastern Asia\"]}"}, {"role": "assistant", "content": "[\"Shibuya\", \"Akihabara\", \"Chiyoda\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"coastal city\", \"tagCollection\": [\"Barcelona\", \"San Francisco\", \"Lisbon\", \"Paris\", \"Miami\"]}"}, {"role": "assistant", "content": "[\"Barcelona\", \"San Francisco\", \"Lisbon\", \"Miami\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"island\", \"tagCollection\": [\"Hawaii\", \"Sicily\", \"Greenland\", \"Pacific region\", \"archipelago\"]}"}, {"role": "assistant", "content": "[\"Hawaii\", \"Sicily\", \"Greenland\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"park\", \"tagCollection\": [\"city park\", \"playground\", \"dog park\", \"public garden\", \"urban forest\"]}"}, {"role": "assistant", "content": "[\"city park\", \"dog park\", \"public garden\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"sidewalk\", \"tagCollection\": [\"narrow sidewalk\", \"wide sidewalk\", \"crowded sidewalk\", \"street corner\", \"pavement\"]}"}, {"role": "assistant", "content": "[\"narrow sidewalk\", \"wide sidewalk\", \"crowded sidewalk\", \"pavement\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"stadium\", \"tagCollection\": [\"soccer field\", \"stadium seats\", \"running track\", \"football stadium\", \"sports complex\"]}"}, {"role": "assistant", "content": "[\"soccer field\", \"football stadium\", \"stadium seats\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"interior\", \"tagCollection\": [\"restaurant interior\", \"home interior\", \"office space\", \"indoor mall\", \"living room\"]}"}, {"role": "assistant", "content": "[\"restaurant interior\", \"home interior\", \"indoor mall\", \"living room\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"exterior\", \"tagCollection\": [\"building facade\", \"storefront\", \"restaurant terrace\", \"public square\", \"parking lot\"]}"}, {"role": "assistant", "content": "[\"building facade\", \"storefront\", \"restaurant terrace\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"public square\", \"tagCollection\": [\"fountain square\", \"pedestrian plaza\", \"city square\", \"market area\", \"urban crossroads\"]}"}, {"role": "assistant", "content": "[\"fountain square\", \"pedestrian plaza\", \"city square\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"shopping mall\", \"tagCollection\": [\"indoor mall\", \"open-air mall\", \"luxury mall\", \"shopping district\", \"retail center\"]}"}, {"role": "assistant", "content": "[\"indoor mall\", \"open-air mall\", \"luxury mall\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"bridge\", \"tagCollection\": [\"suspension bridge\", \"pedestrian bridge\", \"steel bridge\", \"highway overpass\", \"city skyline\"]}"}, {"role": "assistant", "content": "[\"suspension bridge\", \"pedestrian bridge\", \"steel bridge\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"library\", \"tagCollection\": [\"university library\", \"public library\", \"digital library\", \"study room\", \"reading area\"]}"}, {"role": "assistant", "content": "[\"university library\", \"public library\", \"digital library\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"bus stop\", \"tagCollection\": [\"sheltered bus stop\", \"urban bus stop\", \"suburban bus stop\", \"train station\", \"bus terminal\"]}"}, {"role": "assistant", "content": "[\"sheltered bus stop\", \"urban bus stop\", \"suburban bus stop\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"weather\", \"tagCollection\": [\"rain\", \"sunny day\", \"storm\", \"fog\", \"snow\"]}"}, {"role": "assistant", "content": "[\"rain\", \"sunny day\", \"storm\", \"fog\", \"snow\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"rain\", \"tagCollection\": [\"light rain\", \"heavy rain\", \"drizzle\", \"thunderstorm with rain\", \"rain showers\"]}"}, {"role": "assistant", "content": "[\"light rain\", \"heavy rain\", \"drizzle\", \"thunderstorm with rain\", \"rain showers\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"cloud\", \"tagCollection\": [\"cumulus clouds\", \"cirrus clouds\", \"storm clouds\", \"overcast sky\", \"scattered clouds\"]}"}, {"role": "assistant", "content": "[\"cumulus clouds\", \"cirrus clouds\", \"storm clouds\", \"overcast sky\", \"scattered clouds\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"storm\", \"tagCollection\": [\"thunderstorm\", \"hailstorm\", \"tropical storm\", \"blizzard\", \"sandstorm\"]}"}, {"role": "assistant", "content": "[\"thunderstorm\", \"hailstorm\", \"tropical storm\", \"blizzard\", \"sandstorm\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"wind\", \"tagCollection\": [\"breeze\", \"strong winds\", \"gale\", \"hurricane winds\", \"wind gusts\"]}"}, {"role": "assistant", "content": "[\"breeze\", \"strong winds\", \"gale\", \"hurricane winds\", \"wind gusts\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"snow\", \"tagCollection\": [\"light snow\", \"snowstorm\", \"fresh snow\", \"melting snow\", \"blizzard conditions\"]}"}, {"role": "assistant", "content": "[\"light snow\", \"snowstorm\", \"fresh snow\", \"melting snow\", \"blizzard conditions\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"fog\", \"tagCollection\": [\"thick fog\", \"light fog\", \"morning fog\", \"dense mist\", \"low visibility\"]}"}, {"role": "assistant", "content": "[\"thick fog\", \"light fog\", \"morning fog\", \"dense mist\", \"low visibility\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"temperature\", \"tagCollection\": [\"hot weather\", \"cold weather\", \"freezing temperatures\", \"warm day\", \"chilly morning\"]}"}, {"role": "assistant", "content": "[\"hot weather\", \"cold weather\", \"freezing temperatures\", \"warm day\", \"chilly morning\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"lightning\", \"tagCollection\": [\"forked lightning\", \"sheet lightning\", \"cloud-to-ground lightning\", \"storm lightning\", \"electric storm\"]}"}, {"role": "assistant", "content": "[\"forked lightning\", \"sheet lightning\", \"cloud-to-ground lightning\", \"storm lightning\", \"electric storm\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"rainbow\", \"tagCollection\": [\"double rainbow\", \"faint rainbow\", \"bright rainbow\", \"rainbow arc\", \"colorful rainbow\"]}"}, {"role": "assistant", "content": "[\"double rainbow\", \"faint rainbow\", \"bright rainbow\", \"rainbow arc\", \"colorful rainbow\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"carpenter\", \"tagCollection\": [\"woodworker\", \"furniture maker\", \"carpenter at work\", \"construction worker\", \"craftsman\"]}"}, {"role": "assistant", "content": "[\"woodworker\", \"furniture maker\", \"carpenter at work\", \"craftsman\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"lawyer\", \"tagCollection\": [\"criminal lawyer\", \"legal advisor\", \"courtroom lawyer\", \"judge\", \"paralegal\"]}"}, {"role": "assistant", "content": "[\"criminal lawyer\", \"courtroom lawyer\", \"legal advisor\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"chef\", \"tagCollection\": [\"pastry chef\", \"restaurant chef\", \"kitchen assistant\"]}"}, {"role": "assistant", "content": "[\"pastry chef\", \"restaurant chef\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"waiter serving drinks\", \"tagCollection\": [\"waiter with tray\", \"bartender\", \"woman serving drinks\", \"person working at restaurant\", \"waiter taking orders\"]}"}, {"role": "assistant", "content": "[\"waiter with tray\", \"waiter taking orders\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"teacher\", \"tagCollection\": [\"math teacher\", \"science tutor\", \"school principal\", \"private tutor\"]}"}, {"role": "assistant", "content": "[\"math teacher\", \"science tutor\", \"private tutor\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"doctor\", \"tagCollection\": [\"surgeon\", \"pediatrician\", \"nurse\", \"general practitioner\", \"dentist\", \"professional\"]}"}, {"role": "assistant", "content": "[\"surgeon\", \"pediatrician\", \"general practitioner\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman painting\", \"tagCollection\": [\"artist painting outdoors\", \"woman painting on canvas\", \"man painting\", \"street painter\"]}"}, {"role": "assistant", "content": "[\"woman painting on canvas\", \"artist painting outdoors\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"photographer\", \"tagCollection\": [\"wedding photographer\", \"street photographer\", \"camera operator\"]}"}, {"role": "assistant", "content": "[\"wedding photographer\", \"street photographer\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman driving\", \"tagCollection\": [\"woman driving a car\", \"taxi driver\", \"man driving\"]}"}, {"role": "assistant", "content": "[\"woman driving a car\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"firefighter\", \"tagCollection\": [\"firefighter on duty\", \"rescue worker\", \"volunteer firefighter\", \"emergency responder\"]}"}, {"role": "assistant", "content": "[\"firefighter on duty\", \"volunteer firefighter\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"hat\", \"tagCollection\": [\"wide-brimmed hat\", \"baseball cap\", \"woolen hat\", \"scarf\", \"sun hat\"]}"}, {"role": "assistant", "content": "[\"wide-brimmed hat\", \"sun hat\", \"baseball cap\", \"woolen hat\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman with handbag\", \"tagCollection\": [\"woman carrying a purse\", \"woman holding a clutch\", \"man with a backpack\", \"woman with a shoulder bag\", \"child with a bag\"]}"}, {"role": "assistant", "content": "[\"woman carrying a purse\", \"woman holding a clutch\", \"woman with a shoulder bag\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"jacket\", \"tagCollection\": [\"leather jacket\", \"winter coat\", \"denim jacket\", \"raincoat\", \"hat\"]}"}, {"role": "assistant", "content": "[\"leather jacket\", \"denim jacket\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"child with umbrella\", \"tagCollection\": [\"boy with umbrella\", \"girl holding a colorful umbrella\", \"woman with a raincoat\", \"man holding an umbrella\", \"child carrying a backpack\"]}"}, {"role": "assistant", "content": "[\"boy with umbrella\", \"girl holding a colorful umbrella\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"scarf\", \"tagCollection\": [\"wool scarf\", \"silk scarf\", \"knitted scarf\", \"shawl\", \"gloves\"]}"}, {"role": "assistant", "content": "[\"wool scarf\", \"silk scarf\", \"knitted scarf\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"glasses\", \"tagCollection\": [\"sunglasses\", \"reading glasses\", \"spectacles\", \"contact lenses\", \"woman wearing glasses\"]}"}, {"role": "assistant", "content": "[\"sunglasses\", \"reading glasses\", \"woman wearing glasses\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man with a tie\", \"tagCollection\": [\"man wearing a bow tie\", \"man adjusting his tie\", \"woman with a scarf\", \"man in a suit\"]}"}, {"role": "assistant", "content": "[\"man wearing a bow tie\", \"man adjusting his tie\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman wearing a dress\", \"tagCollection\": [\"woman in a red dress\", \"girl in a floral dress\", \"woman wearing jeans\", \"man in formal wear\", \"bride in a wedding dress\"]}"}, {"role": "assistant", "content": "[\"woman in a red dress\", \"bride in a wedding dress\", \"girl in a floral dress\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman with earrings\", \"tagCollection\": [\"woman wearing gold earrings\", \"woman with diamond studs\", \"man with a ring\", \"child with earrings\"]}"}, {"role": "assistant", "content": "[\"woman wearing gold earrings\", \"woman with diamond studs\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"flower\", \"tagCollection\": [\"rose\", \"tulip\", \"daffodil\", \"garden plant\", \"sunflower\"]}"}, {"role": "assistant", "content": "[\"rose\", \"tulip\", \"daffodil\", \"sunflower\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"tree\", \"tagCollection\": [\"oak\", \"pine\", \"deciduous tree\", \"conifer\", \"bush\"]}"}, {"role": "assistant", "content": "[\"oak\", \"pine\", \"deciduous tree\", \"conifer\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"rose family\", \"tagCollection\": [\"wild rose\", \"cultivated rose\", \"apple tree\", \"cherry blossom\", \"tulip\"]}"}, {"role": "assistant", "content": "[\"wild rose\", \"cherry blossom\", \"cultivated rose\", \"apple tree\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"cactus\", \"tagCollection\": [\"saguaro\", \"desert plant\", \"succulent\", \"prickly pear\", \"flowering cactus\"]}"}, {"role": "assistant", "content": "[\"saguaro\", \"prickly pear\", \"flowering cactus\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"orchid\", \"tagCollection\": [\"phalaenopsis\", \"wild orchid\", \"house plant\", \"orchid hybrid\", \"tropical flower\"]}"}, {"role": "assistant", "content": "[\"phalaenopsis\", \"wild orchid\", \"orchid hybrid\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"grass\", \"tagCollection\": [\"lawn grass\", \"tall grass\", \"cereal grass\", \"reed\", \"forest moss\"]}"}, {"role": "assistant", "content": "[\"lawn grass\", \"tall grass\", \"cereal grass\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"palm tree\", \"tagCollection\": [\"coconut palm\", \"date palm\", \"tropical tree\", \"banana plant\", \"potted palm\"]}"}, {"role": "assistant", "content": "[\"coconut palm\", \"potted palm\", \"date palm\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"forest\", \"tagCollection\": [\"rainforest\", \"pine forest\", \"woodland\", \"tropical jungle\", \"garden\"]}"}, {"role": "assistant", "content": "[\"rainforest\", \"pine forest\", \"woodland\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"fern\", \"tagCollection\": [\"tropical fern\", \"house fern\", \"forest plant\", \"wild fern\", \"flowering plant\"]}"}, {"role": "assistant", "content": "[\"tropical fern\", \"wild fern\", \"house fern\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"vine\", \"tagCollection\": [\"grapevine\", \"ivy\", \"climbing plant\", \"garden creeper\", \"jungle vine\"]}"}, {"role": "assistant", "content": "[\"grapevine\", \"jungle vine\", \"ivy\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"men playing cards\", \"tagCollection\": [\"men at a poker table\", \"group of men playing cards\", \"women playing cards\", \"man playing solitaire\", \"friends playing games\"]}"}, {"role": "assistant", "content": "[\"men at a poker table\", \"group of men playing cards\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"women laughing\", \"tagCollection\": [\"group of women laughing\", \"woman smiling\", \"friends laughing together\", \"man laughing\", \"children laughing\"]}"}, {"role": "assistant", "content": "[\"group of women laughing\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"kids fighting\", \"tagCollection\": [\"boys wrestling\", \"siblings arguing\", \"children playing rough\", \"adults arguing\", \"group of children fighting\"]}"}, {"role": "assistant", "content": "[\"boys wrestling\", \"siblings arguing\", \"group of children fighting\", \"children playing rough\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"people talking\", \"tagCollection\": [\"men in conversation\", \"group chatting at a cafe\", \"people on a video call\", \"woman on the phone\", \"children talking\"]}"}, {"role": "assistant", "content": "[\"men in conversation\", \"group chatting at a cafe\", \"children talking\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"people dancing together\", \"tagCollection\": [\"couple dancing\", \"group of dancers\", \"solo performer\", \"friends dancing\", \"children dancing together\"]}"}, {"role": "assistant", "content": "[\"couple dancing\", \"friends dancing\", \"group of dancers\", \"children dancing together\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\":  \"family eating dinner\", \"tagCollection\": [\"couple dining\", \"parents and children at the table\", \"large family gathering\", \"friends sharing a meal\", \"family eating pizza\"]}"}, {"role": "assistant", "content": "[\"parents and children at the table\", \"large family gathering\", \"family eating pizza\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"friends hugging\", \"tagCollection\": [\"two women hugging\", \"group of friends embracing\", \"man hugging a dog\", \"couple hugging\", \"children hugging\"]}"}, {"role": "assistant", "content": "[\"two women hugging\", \"group of friends embracing\", \"children hugging\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"parents playing with children\", \"tagCollection\": [\"siblings playing together\", \"mother playing with her kids\", \"father teaching his child\", \"parents watching their children\", \"babysitter playing\"]}"}, {"role": "assistant", "content": "[\"mother playing with her kids\", \"father teaching his child\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"people working together\", \"tagCollection\": [\"coworkers at a desk\", \"team brainstorming\", \"manager giving instructions\", \"teacher lecturing\", \"friends studying\"]}"}, {"role": "assistant", "content": "[\"coworkers at a desk\", \"team brainstorming\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"group of people arguing\", \"tagCollection\": [\"friends having discussion\", \"family members arguing\", \"coworkers debating\", \"two strangers fighting\", \"children yelling at each other\"]}"}, {"role": "assistant", "content": "[\"friends having discussion\", \"family members arguing\", \"coworkers debating\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"group of people\", \"tagCollection\": [\"large group\", \"5 people\", \"crowd\", \"couple\", \"single person\"]}"}, {"role": "assistant", "content": "[\"large group\", \"5 people\", \"crowd\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"3 people\", \"tagCollection\": [\"small group\", \"trio\", \"5 people\", \"single person\", \"crowd\"]}"}, {"role": "assistant", "content": "[\"small group\", \"trio\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"couple\", \"tagCollection\": [\"man and woman\", \"romantic couple\", \"parent and child\", \"group of people\", \"two kids\"]}"}, {"role": "assistant", "content": "[\"man and woman\", \"romantic couple\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"single person\", \"tagCollection\": [\"man alone\", \"woman alone\", \"child alone\", \"couple\", \"small group\"]}"}, {"role": "assistant", "content": "[\"man alone\", \"woman alone\", \"child alone\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"crowd\", \"tagCollection\": [\"large group\", \"5 people\", \"group of people\", \"trio\", \"single person\"]}"}, {"role": "assistant", "content": "[\"large group\", \"group of people\", \"5 people\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"child alone\", \"tagCollection\": [\"boy alone\", \"girl alone\", \"child with parent\", \"children playing\", \"single person\"]}"}, {"role": "assistant", "content": "[\"boy alone\", \"girl alone\", \"single person\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"people\", \"tagCollection\": [\"single person\", \"crowd\", \"small group\", \"5 people\", \"couple\"]}"}, {"role": "assistant", "content": "[\"crowd\", \"small group\", \"5 people\", \"single person\", \"couple\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"5 people\", \"tagCollection\": [\"family of 5\", \"large group\", \"trio\", \"people\", \"group of 5\"]}"}, {"role": "assistant", "content": "[\"group of 5\", \"family of 5\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"large group\", \"tagCollection\": [\"crowd\", \"5 people\", \"small group\", \"group of 10\", \"family of 8\"]}"}, {"role": "assistant", "content": "[\"crowd\", \"group of 10\", \"family of 8\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"group of 3\", \"tagCollection\": [\"5 people\", \"large group\", \"trio\", \"3 kids\", \"family of 3\"]}"}, {"role": "assistant", "content": "[\"trio\", \"3 kids\", \"family of 3\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"smartphone\", \"tagCollection\": [\"laptop\", \"tablet\", \"desktop computer\", \"feature phone\", \"mobile phone\"]}"}, {"role": "assistant", "content": "[\"mobile phone\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"tablet\", \"tagCollection\": [\"smartphone\", \"desktop monitor\", \"drawing tablet\", \"e-reader\", \"iPad\"]}"}, {"role": "assistant", "content": "[\"drawing tablet\", \"iPad\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"laptop\", \"tagCollection\": [\"gaming console\", \"desktop computer\", \"notebook\", \"smartphone\", \"office laptop\"]}"}, {"role": "assistant", "content": "[\"office laptop\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"desktop computer\", \"tagCollection\": [\"gaming PC\", \"workstation\", \"smart TV\", \"tablet\", \"server\"]}"}, {"role": "assistant", "content": "[\"gaming PC\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"rainy day\", \"tagCollection\": [\"rainy city\", \"stormy weather\", \"light drizzle\", \"sunny day\", \"foggy morning\"]}"}, {"role": "assistant", "content": "[\"rainy city\", \"stormy weather\", \"light drizzle\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"cloudy\", \"tagCollection\": [\"overcast\", \"partly cloudy\", \"storm clouds\", \"blue sky\", \"scattered clouds\"]}"}, {"role": "assistant", "content": "[\"overcast\", \"partly cloudy\", \"storm clouds\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"sunny street\", \"tagCollection\": [\"bright day\", \"shadowy street\", \"sunlit street\", \"rainy road\", \"warm afternoon\"]}"}, {"role": "assistant", "content": "[\"sunlit street\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"storm\", \"tagCollection\": [\"thunderstorm\", \"hurricane\", \"tropical storm\", \"light breeze\", \"snowstorm\"]}"}, {"role": "assistant", "content": "[\"thunderstorm\", \"tropical storm\", \"snowstorm\", \"hurricane\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"foggy\", \"tagCollection\": [\"dense fog\", \"misty morning\", \"clear day\", \"cloudy evening\", \"hazy weather\"]}"}, {"role": "assistant", "content": "[\"dense fog\", \"misty morning\", \"hazy weather\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"snowy day\", \"tagCollection\": [\"fresh snow\", \"snowstorm\", \"snow-covered road\", \"sunny day\", \"icy morning\"]}"}, {"role": "assistant", "content": "[\"fresh snow\", \"snowstorm\", \"snow-covered road\", \"icy morning\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"windy\", \"tagCollection\": [\"strong winds\", \"light breeze\", \"stormy weather\", \"calm afternoon\", \"gusty day\"]}"}, {"role": "assistant", "content": "[\"strong winds\", \"gusty day\", \"stormy weather\", \"light breeze\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"sunrise\", \"tagCollection\": [\"early morning light\", \"sunset\", \"dawn sky\", \"bright morning\", \"twilight\"]}"}, {"role": "assistant", "content": "[\"early morning light\", \"dawn sky\", \"bright morning\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"clear sky\", \"tagCollection\": [\"blue sky\", \"cloudless day\", \"sunny afternoon\", \"partly cloudy\", \"storm clouds\"]}"}, {"role": "assistant", "content": "[\"blue sky\", \"cloudless day\", \"sunny afternoon\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"frosty morning\", \"tagCollection\": [\"frozen morning grass\", \"cold sunrise\", \"snow-covered trees\", \"icy road\", \"rainy morning\"]}"}, {"role": "assistant", "content": "[\"frozen morning grass\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"car\", \"tagCollection\": [\"vehicle\", \"automobile\", \"sedan\", \"truck\", \"sports car\", \"transport\"]}"}, {"role": "assistant", "content": "[\"automobile\", \"sedan\", \"sports car\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"movie\", \"tagCollection\": [\"film\", \"cinema\", \"motion picture\", \"series\", \"entertainment\"]}"}, {"role": "assistant", "content": "[\"film\", \"motion picture\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"photograph\", \"tagCollection\": [\"picture\", \"snapshot\", \"photo\", \"image\", \"painting\"]}"}, {"role": "assistant", "content": "[\"picture\", \"photo\", \"snapshot\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dog\", \"tagCollection\": [\"puppy\", \"hound\", \"canine\", \"wolf\", \"animal\"]}"}, {"role": "assistant", "content": "[\"puppy\", \"hound\", \"canine\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"house\", \"tagCollection\": [\"home\", \"building\", \"cottage\", \"residence\", \"structure\"]}"}, {"role": "assistant", "content": "[\"home\", \"cottage\", \"residence\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"bird\", \"tagCollection\": [\"avian\", \"sparrow\", \"eagle\", \"animal\", \"nest\"]}"}, {"role": "assistant", "content": "[\"sparrow\", \"eagle\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"city\", \"tagCollection\": [\"metropolis\", \"urban area\", \"town\", \"village\", \"capital\"]}"}, {"role": "assistant", "content": "[\"metropolis\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"tree\", \"tagCollection\": [\"plant\", \"oak\", \"pine\", \"vegetation\", \"forest\"]}"}, {"role": "assistant", "content": "[\"oak\", \"pine\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"music\", \"tagCollection\": [\"song\", \"melody\", \"tune\", \"orchestra\", \"sound\"]}"}, {"role": "assistant", "content": "[\"song\", \"melody\", \"tune\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"flower\", \"tagCollection\": [\"blossom\", \"petal\", \"rose\", \"plant\", \"garden\"]}"}, {"role": "assistant", "content": "[\"blossom\", \"rose\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"mountain\", \"tagCollection\": [\"hill\", \"peak\", \"summit\", \"range\", \"cliff\"]}"}, {"role": "assistant", "content": "[\"peak\", \"summit\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"book\", \"tagCollection\": [\"novel\", \"story\", \"magazine\", \"paper\", \"publication\"]}"}, {"role": "assistant", "content": "[\"novel\", \"story\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"food\", \"tagCollection\": [\"meal\", \"cuisine\", \"dish\", \"snack\", \"ingredient\"]}"}, {"role": "assistant", "content": "[\"meal\", \"dish\", \"snack\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"computer\", \"tagCollection\": [\"laptop\", \"PC\", \"desktop\", \"hardware\", \"device\"]}"}, {"role": "assistant", "content": "[\"laptop\", \"PC\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"drink\", \"tagCollection\": [\"beverage\", \"juice\", \"soda\", \"liquid\", \"water\"]}"}, {"role": "assistant", "content": "[\"beverage\", \"juice\", \"soda\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"sport\", \"tagCollection\": [\"game\", \"soccer\", \"tennis\", \"activity\", \"exercise\"]}"}, {"role": "assistant", "content": "[\"soccer\", \"tennis\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"school\", \"tagCollection\": [\"institution\", \"academy\", \"university\", \"college\", \"building\"]}"}, {"role": "assistant", "content": "[\"academy\", \"university\", \"college\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"animal\", \"tagCollection\": [\"creature\", \"mammal\", \"reptile\", \"fish\", \"organism\"]}"}, {"role": "assistant", "content": "[\"mammal\", \"reptile\", \"fish\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"red apple\", \"tagCollection\": [\"apple\", \"green apple\", \"ripe red apple\", \"fruit\", \"red fruit\"]}"}, {"role": "assistant", "content": "[\"ripe red apple\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"blue car\", \"tagCollection\": [\"car\", \"vehicle\", \"blue sports car\", \"small blue car\", \"sedan\"]}"}, {"role": "assistant", "content": "[\"blue sports car\", \"small blue car\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"green house\", \"tagCollection\": [\"house\", \"small green house\", \"garden\", \"green building\"]}"}, {"role": "assistant", "content": "[\"small green house\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"yellow flower\", \"tagCollection\": [\"flower\", \"yellow petal\", \"yellow tulip\", \"plant\"]}"}, {"role": "assistant", "content": "[\"yellow tulip\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"wooden table\", \"tagCollection\": [\"table\", \"wood\", \"small wooden table\", \"furniture\"]}"}, {"role": "assistant", "content": "[\"small wooden table\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"black chair\", \"tagCollection\": [\"chair\", \"furniture\", \"black office chair\", \"small black chair\"]}"}, {"role": "assistant", "content": "[\"black office chair\", \"small black chair\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"red dress\", \"tagCollection\": [\"dress\", \"fashion\", \"long red dress\", \"red garment\"]}"}, {"role": "assistant", "content": "[\"long red dress\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"silver spoon\", \"tagCollection\": [\"spoon\", \"cutlery\", \"small silver spoon\", \"large spoon\"]}"}, {"role": "assistant", "content": "[\"small silver spoon\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"brown horse\", \"tagCollection\": [\"horse\", \"animal\", \"wild brown horse\", \"brown foal\"]}"}, {"role": "assistant", "content": "[\"wild brown horse\", \"brown foal\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"white cat\", \"tagCollection\": [\"cat\", \"animal\", \"fluffy white cat\", \"kitten\"]}"}, {"role": "assistant", "content": "[\"fluffy white cat\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"bright red apple\", \"tagCollection\": [\"apple\", \"red apple\", \"bright red apple\", \"ripe bright red apple\", \"fruit\"]}"}, {"role": "assistant", "content": "[\"bright red apple\", \"ripe bright red apple\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"small wooden chair\", \"tagCollection\": [\"chair\", \"small chair\", \"furniture\", \"small wooden chair\", \"antique small wooden chair\"]}"}, {"role": "assistant", "content": "[\"small wooden chair\", \"antique small wooden chair\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"shiny silver spoon\", \"tagCollection\": [\"spoon\", \"silver spoon\", \"cutlery\", \"shiny silver spoon\", \"engraved shiny silver spoon\"]}"}, {"role": "assistant", "content": "[\"shiny silver spoon\", \"engraved shiny silver spoon\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"tall green tree\", \"tagCollection\": [\"tree\", \"tall tree\", \"green tree\", \"tall green pine tree\", \"forest\"]}"}, {"role": "assistant", "content": "[\"tall green pine tree\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dark brown horse\", \"tagCollection\": [\"horse\", \"brown horse\", \"dark brown horse\", \"dark brown racing horse\", \"animal\"]}"}, {"role": "assistant", "content": "[\"dark brown horse\", \"dark brown racing horse\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"round wooden table\", \"tagCollection\": [\"table\", \"round table\", \"wooden table\", \"small round wooden table\", \"furniture\"]}"}, {"role": "assistant", "content": "[\"small round wooden table\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"sparkling blue water\", \"tagCollection\": [\"water\", \"blue water\", \"sparkling water\", \"sparkling blue water\", \"crystal clear sparkling blue water\"]}"}, {"role": "assistant", "content": "[\"sparkling blue water\", \"crystal clear sparkling blue water\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"bright yellow flower\", \"tagCollection\": [\"flower\", \"yellow flower\", \"bright flower\", \"bright yellow garden flower\", \"plant\"]}"}, {"role": "assistant", "content": "[\"bright yellow garden flower\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"large black dog\", \"tagCollection\": [\"dog\", \"black dog\", \"large black dog\", \"large black guard dog\", \"animal\"]}"}, {"role": "assistant", "content": "[\"large black dog\", \"large black guard dog\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"fluffy white kitten\", \"tagCollection\": [\"kitten\", \"white kitten\", \"fluffy white kitten\", \"adorable fluffy white kitten\", \"cat\"]}"}, {"role": "assistant", "content": "[\"fluffy white kitten\", \"adorable fluffy white kitten\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"round wooden table\", \"tagCollection\": [\"table\", \"round table\", \"wooden table\", \"furniture\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"bright yellow flower\", \"tagCollection\": [\"flower\", \"yellow flower\", \"bright flower\", \"plant\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"boy playing\", \"tagCollection\": [\"boy\", \"boy playing\", \"boy playing soccer\", \"boy playing chess\", \"person\"]}"}, {"role": "assistant", "content": "[\"boy playing\", \"boy playing soccer\", \"boy playing chess\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman painting\", \"tagCollection\": [\"woman\", \"woman painting\", \"woman painting a landscape\", \"artist\", \"person\"]}"}, {"role": "assistant", "content": "[\"woman painting\", \"woman painting a landscape\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man running\", \"tagCollection\": [\"man\", \"person\", \"man running\", \"man running on the beach\", \"athlete\"]}"}, {"role": "assistant", "content": "[\"man running\", \"man running on the beach\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"girl reading\", \"tagCollection\": [\"reader\", \"girl\", \"girl reading\", \"girl reading a book\", \"person studying\"]}"}, {"role": "assistant", "content": "[\"girl reading\", \"girl reading a book\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man cooking\", \"tagCollection\": [\"man\", \"man cooking\", \"man cooking pasta\", \"chef\", \"person\"]}"}, {"role": "assistant", "content": "[\"man cooking\", \"man cooking pasta\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman running\", \"tagCollection\": [\"woman\", \"person\", \"woman running\", \"woman running in a park\", \"athlete\"]}"}, {"role": "assistant", "content": "[\"woman running\", \"woman running in a park\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"boy swimming\", \"tagCollection\": [\"boy\", \"person\", \"boy swimming\", \"boy swimming in a pool\", \"athlete\"]}"}, {"role": "assistant", "content": "[\"boy swimming\", \"boy swimming in a pool\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman reading\", \"tagCollection\": [\"woman\", \"person\", \"woman reading\", \"woman reading a novel\", \"student\"]}"}, {"role": "assistant", "content": "[\"woman reading\", \"woman reading a novel\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man fishing\", \"tagCollection\": [\"man\", \"man fishing\", \"man fishing in a river\", \"person\", \"angler\"]}"}, {"role": "assistant", "content": "[\"man fishing\", \"man fishing in a river\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman reading pink magazine\", \"tagCollection\": [\"woman reading\", \"woman reading magazine\", \"magazine reader\", \"person\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"child playing guitar\", \"tagCollection\": [\"child\", \"child playing guitar\", \"musician\", \"child playing acoustic guitar\", \"person\", \"guitar player\"]}"}, {"role": "assistant", "content": "[\"child playing guitar\", \"child playing acoustic guitar\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man walking a dog\", \"tagCollection\": [\"man\", \"man walking\", \"man walking a dog\", \"dog walker\", \"person\", \"man walking a big dog\"]}"}, {"role": "assistant", "content": "[\"man walking a dog\", \"man walking a big dog\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman riding a bike\", \"tagCollection\": [\"woman\", \"biker\", \"woman riding a bike\", \"person\", \"woman riding a mountain bike\"]}"}, {"role": "assistant", "content": "[\"woman riding a bike\", \"woman riding a mountain bike\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"boy flying a kite\", \"tagCollection\": [\"boy\", \"boy flying\", \"boy flying a kite\", \"child\", \"boy flying a red kite\"]}"}, {"role": "assistant", "content": "[\"boy flying a kite\", \"boy flying a red kite\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"child reading comic books\", \"tagCollection\": [\"child\", \"child reading\", \"comic book reader\", \"child reading comic books\", \"person\"]}"}, {"role": "assistant", "content": "[\"child reading comic books\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"girl drawing flowers\", \"tagCollection\": [\"girl\", \"girl drawing\", \"artist\", \"girl drawing flowers\", \"girl drawing colorful flowers\"]}"}, {"role": "assistant", "content": "[\"girl drawing flowers\", \"girl drawing colorful flowers\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man fixing a car\", \"tagCollection\": [\"man\", \"mechanic\", \"man fixing\", \"man fixing a car\", \"man fixing a red car\"]}"}, {"role": "assistant", "content": "[\"man fixing a car\", \"man fixing a red car\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"woman shopping groceries\", \"tagCollection\": [\"woman\", \"shopper\", \"woman shopping groceries\", \"person\", \"woman shopping fresh groceries\"]}"}, {"role": "assistant", "content": "[\"woman shopping groceries\", \"woman shopping fresh groceries\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"child playing the piano\", \"tagCollection\": [\"child\", \"child playing\", \"pianist\", \"child playing the piano\", \"child playing a grand piano\"]}"}, {"role": "assistant", "content": "[\"child playing the piano\", \"child playing a grand piano\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man fishing in a lake\", \"tagCollection\": [\"man\", \"fisherman\", \"man fishing\", \"man fishing in a lake\", \"man fishing in a small lake\"]}"}, {"role": "assistant", "content": "[\"man fishing in a lake\", \"man fishing in a small lake\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"cronopios\", \"tagCollection\": [\"person\", \"man with cronopio\", \"cronopios\", \"rare object\", \"woman holding cronopio\"]}"}, {"role": "assistant", "content": "[\"cronopios\", \"man with cronopio\", \"woman holding cronopio\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"basketball\", \"tagCollection\": [\"sport\", \"child playing\", \"child playing basketball\", \"basketball player\", \"person\"]}"}, {"role": "assistant", "content": "[\"child playing basketball\", \"basketball player\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"cat\", \"tagCollection\": [\"animal\", \"sleeping cat\", \"girl with cat\", \"dog\", \"feline\"]}"}, {"role": "assistant", "content": "[\"sleeping cat\", \"girl with cat\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"coffee\", \"tagCollection\": [\"drink\", \"person drinking coffee\", \"coffee in a cup\", \"tea\", \"coffee shop\"]}"}, {"role": "assistant", "content": "[\"person drinking coffee\", \"coffee in a cup\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"child playing\", \"tagCollection\": [\"child\", \"child playing outdoors\", \"child playing soccer\", \"person\", \"game\"]}"}, {"role": "assistant", "content": "[\"child playing outdoors\", \"child playing soccer\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"lake\", \"tagCollection\": [\"water\", \"landscape with lake\", \"person near a lake\", \"river\", \"calm lake\"]}"}, {"role": "assistant", "content": "[\"landscape with lake\", \"calm lake\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"bicycle\", \"tagCollection\": [\"vehicle\", \"child with bicycle\", \"red bicycle\", \"car\", \"person riding a bicycle\"]}"}, {"role": "assistant", "content": "[\"child with bicycle\", \"red bicycle\", \"person riding a bicycle\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"flower\", \"tagCollection\": [\"plant\", \"flower in a vase\", \"person holding a flower\", \"tree\", \"red flower\"]}"}, {"role": "assistant", "content": "[\"flower in a vase\", \"person holding a flower\", \"red flower\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"beach\", \"tagCollection\": [\"sea\", \"child playing on the beach\", \"sand\", \"deserted beach\", \"family on the beach\"]}"}, {"role": "assistant", "content": "[\"child playing on the beach\", \"deserted beach\", \"family on the beach\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dog\", \"tagCollection\": [\"animal\", \"child with dog\", \"dog playing\", \"cat\", \"person walking a dog\"]}"}, {"role": "assistant", "content": "[\"child with dog\", \"dog playing\", \"person walking a dog\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"apple\", \"tagCollection\": [\"fruit\", \"apple pie\", \"red apple\", \"tree\", \"green apple\"]}"}, {"role": "assistant", "content": "[\"red apple\", \"green apple\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"football\", \"tagCollection\": [\"sport\", \"child playing football\", \"football player\", \"ball\", \"stadium\"]}"}, {"role": "assistant", "content": "[\"child playing football\", \"football player\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"book\", \"tagCollection\": [\"library\", \"story\", \"open book\", \"person reading a book\", \"bookcase\"]}"}, {"role": "assistant", "content": "[\"open book\", \"person reading a book\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"tree\", \"tagCollection\": [\"forest\", \"oak tree\", \"pine tree\", \"tree silhouette\", \"plant\"]}"}, {"role": "assistant", "content": "[\"oak tree\", \"pine tree\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"coffee\", \"tagCollection\": [\"drink\", \"person drinking coffee\", \"coffee mug\", \"tea\", \"breakfast\"]}"}, {"role": "assistant", "content": "[\"person drinking coffee\", \"coffee mug\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"mountain\", \"tagCollection\": [\"landscape\", \"hiker\", \"clouds\", \"valley\", \"view\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"car\", \"tagCollection\": [\"vehicle\", \"bus\", \"truck\", \"motorcycle\", \"bicycle\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"lake\", \"tagCollection\": [\"water\", \"ocean\", \"sea\", \"river\", \"pond\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"bird\", \"tagCollection\": [\"avian\", \"sparrow\", \"eagle\", \"nest\", \"flight\"]}"}, {"role": "assistant", "content": "[\"sparrow\", \"eagle\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dog\", \"tagCollection\": [\"animal\", \"puppy\", \"wild dog\", \"pet\", \"hound\"]}"}, {"role": "assistant", "content": "[\"puppy\", \"wild dog\", \"hound\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dress\", \"tagCollection\": [\"clothing\", \"dress with flowers\", \"green dress with flowers\", \"multicolor dress with flowers\", \"dress with patterns\", \"yellow dress with drawings\", \"dress with drawings\"]}"}, {"role": "assistant", "content": "[\"dress with flowers\", \"green dress with flowers\", \"multicolor dress with flowers\", \"dress with patterns\", \"yellow dress with drawings\", \"dress with drawings\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"red dress with flowers\", \"tagCollection\": [\"clothing\", \"red dress\", \"red dress with flowers\", \"red and green dress with flowers\", \"floral patterns\"]}"}, {"role": "assistant", "content": "[\"red dress with flowers\", \"red and green dress with flowers\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"green and white striped shirt\", \"tagCollection\": [\"shirt\", \"striped shirt\", \"green and white striped shirt\", \"clothing\", \"formal shirt\"]}"}, {"role": "assistant", "content": "[\"green and white striped shirt\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"multicolor dress with floral patterns\", \"tagCollection\": [\"clothing\", \"dress\", \"multicolor dress\", \"multicolor dress with floral patterns\", \"abstract patterns\"]}"}, {"role": "assistant", "content": "[\"multicolor dress with floral patterns\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"black lace evening gown\", \"tagCollection\": [\"gown\", \"evening gown\", \"black evening gown\", \"black lace evening gown\", \"formal wear\"]}"}, {"role": "assistant", "content": "[\"black lace evening gown\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"yellow polka dot skirt\", \"tagCollection\": [\"skirt\", \"yellow skirt\", \"yellow polka dot skirt\", \"polka dots\", \"clothing\"]}"}, {"role": "assistant", "content": "[\"yellow polka dot skirt\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"blue jeans\", \"tagCollection\": [\"pants\", \"denim\", \"blue jeans\", \"ripped blue jeans\", \"clothing\"]}"}, {"role": "assistant", "content": "[\"blue jeans\", \"ripped blue jeans\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"white summer dress\", \"tagCollection\": [\"dress\", \"white dress\", \"white summer dress\", \"summer clothing\", \"casual wear\"]}"}, {"role": "assistant", "content": "[\"white summer dress\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"black leather jacket\", \"tagCollection\": [\"jacket\", \"black jacket\", \"black leather jacket\", \"leather clothing\", \"outerwear\"]}"}, {"role": "assistant", "content": "[\"black leather jacket\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"pink floral scarf\", \"tagCollection\": [\"scarf\", \"floral scarf\", \"pink scarf\", \"pink floral scarf\", \"accessory\"]}"}, {"role": "assistant", "content": "[\"pink floral scarf\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"green and yellow checkered blazer\", \"tagCollection\": [\"blazer\", \"checkered blazer\", \"green blazer\", \"green and yellow checkered blazer\", \"formal wear\"]}"}, {"role": "assistant", "content": "[\"green and yellow checkered blazer\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"yellow lunarisca\", \"tagCollection\": [\"blue lunarisca\", \"red lunarisca\", \"small yellow lunarisca\", \"transparent lunarisca\", \"big blue lunarisca\", \"lunarisca for kids\", \"yellow lunarisca with stars\", \"rain\", \"big lunarisca\"]}"}, {"role": "assistant", "content": "[\"small yellow lunarisca\", \"yellow lunarisca with stars\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"large lunarisca\", \"tagCollection\": [\"tiny lunarisca\", \"medium lunarisca\", \"large lunarisca\", \"large red lunarisca\", \"huge lunarisca\", \"red accessories\", \"people with lunarisca\", \"broken lunarisca\"]}"}, {"role": "assistant", "content": "[\"large lunarisca\", \"large red lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"blue lunarisca\", \"tagCollection\": [\"lunarisca\", \"blue container\", \"blue lunarisca\", \"dark blue lunarisca\", \"blue and yellow lunarisca\", \"lunarisca designs\", \"colorful lunarisca\"]}"}, {"role": "assistant", "content": "[\"blue lunarisca\", \"dark blue lunarisca\", \"blue and yellow lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"lunarisca with stripes\", \"tagCollection\": [\"striped lunarisca\", \"blue striped lunarisca\", \"lunarisca with stars\", \"plain lunarisca\", \"red and striped lunarisca\", \"striped umbrella\"]}"}, {"role": "assistant", "content": "[\"striped lunarisca\", \"blue striped lunarisca\", \"red and striped lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"pink lunarisca\", \"tagCollection\": [\"lunarisca\", \"red lunarisca\", \"pink lunarisca\", \"bright pink lunarisca\", \"small pink lunarisca\", \"dark red lunarisca\", \"people with pink items\"]}"}, {"role": "assistant", "content": "[\"pink lunarisca\", \"bright pink lunarisca\", \"small pink lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"small lunarisca\", \"tagCollection\": [\"large lunarisca\", \"small lunarisca\", \"tiny lunarisca\", \"compact lunarisca\", \"broken lunarisca\"]}"}, {"role": "assistant", "content": "[\"small lunarisca\", \"tiny lunarisca\", \"compact lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"purple lunarisca\", \"tagCollection\": [\"green lunarisca\", \"blue lunarisca\", \"yellow lunarisca\", \"colorful lunarisca\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"lunarisca for children\", \"tagCollection\": [\"adult lunarisca\", \"children lunarisca\", \"lunarisca for kids\", \"lunarisca designs\", \"toys\", \"child holding lunarisca\"]}"}, {"role": "assistant", "content": "[\"children lunarisca\", \"lunarisca for kids\", \"child holding lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"broken lunarisca\", \"tagCollection\": [\"new lunarisca\", \"damaged lunarisca\", \"broken red lunarisca\", \"fixed lunarisca\"]}"}, {"role": "assistant", "content": "[\"broken red lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"colorful lunarisca\", \"tagCollection\": [\"plain lunarisca\", \"striped lunarisca\", \"red lunarisca\", \"rainbow lunarisca\", \"blue lunarisca\", \"colorful lunarisca\"]}"}, {"role": "assistant", "content": "[\"colorful lunarisca\", \"rainbow lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dragon ball\", \"tagCollection\": [\"one piece\", \"naruto\", \"goku figure\", \"anime collection\", \"superman\", \"batman\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dragon ball\", \"tagCollection\": [\"dragon fruit\", \"fireball\", \"energy ball\", \"shiny dragon\", \"anime powers\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dragon ball\", \"tagCollection\": [\"sports ball\", \"basketball\", \"soccer ball\", \"baseball\", \"volleyball\", \"tennis ball\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dragon ball\", \"tagCollection\": [\"dragon statue\", \"ball shaped lamp\", \"anime conventions\", \"dragon tattoo\", \"energy attacks\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dragon ball\", \"tagCollection\": [\"dragon ball z\", \"goku fighting\", \"z fighters\", \"namekian dragon\", \"dragon ball super\"]}"}, {"role": "assistant", "content": "[\"dragon ball z\", \"dragon ball super\", \"namekian dragon\"]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dragon ball\", \"tagCollection\": [\"anime ball\", \"golden ball\", \"goku\", \"shenron\", \"super saiyan energy\"]}"}, {"role": "assistant", "content": "[\"golden ball\"]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dragon ball\", \"tagCollection\": [\"fighting anime\", \"z warriors\", \"final attacks\", \"spirit bomb\", \"characters with power\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"red spotted eutrapelia\", \"tagCollection\": [\"blue striped eutrapelia\", \"large red eutrapelia\", \"red eutrapelia\", \"spotted umbrella\", \"small red spotted eutrapelia\", \"green spotted eutrapelia\", \"red spotted eutrapelia\", \"broken eutrapelia\"]}"}, {"role": "assistant", "content": "[\"small red spotted eutrapelia\", \"red spotted eutrapelia\"]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"yellow round eutrapelia\", \"tagCollection\": [\"round yellow eutrapelia\", \"eutrapelia for kids\", \"big eutrapelia\", \"yellow round eutrapelia\", \"small yellow round eutrapelia\", \"flat eutrapelia\"]}"}, {"role": "assistant", "content": "[\"yellow round eutrapelia\", \"small yellow round eutrapelia\"]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"blue and green eutrapelia\", \"tagCollection\": [\"green and blue eutrapelia\", \"small blue and green eutrapelia\", \"colorful eutrapelia\", \"blue eutrapelia\", \"blue and green eutrapelia\"]}"}, {"role": "assistant", "content": "[\"small blue and green eutrapelia\", \"blue and green eutrapelia\"]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"plain eutrapelia\", \"tagCollection\": [\"striped eutrapelia\", \"eutrapelia\", \"plain eutrapelia\", \"colorful plain eutrapelia\"]}"}, {"role": "assistant", "content": "[\"plain eutrapelia\", \"colorful plain eutrapelia\"]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"transparent eutrapelia\", \"tagCollection\": [\"transparent eutrapelia with flowers\", \"green eutrapelia\", \"plain transparent eutrapelia\", \"blue transparent eutrapelia\"]}"}, {"role": "assistant", "content": "[\"plain transparent eutrapelia\", \"transparent eutrapelia with flowers\"]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"golden eutrapelia\", \"tagCollection\": [\"golden eutrapelia\", \"golden striped eutrapelia\", \"yellow eutrapelia\", \"shiny golden eutrapelia\"]}"}, {"role": "assistant", "content": "[\"golden eutrapelia\", \"golden striped eutrapelia\", \"shiny golden eutrapelia\"]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"ancient eutrapelia\", \"tagCollection\": [\"ancient broken eutrapelia\", \"modern eutrapelia\", \"ancient eutrapelia\", \"historic eutrapelia\"]}"}, {"role": "assistant", "content": "[\"ancient broken eutrapelia\", \"ancient eutrapelia\"]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"silver eutrapelia\", \"tagCollection\": [\"shiny silver eutrapelia\", \"dull silver eutrapelia\", \"plain silver eutrapelia\", \"silver spotted eutrapelia\", \"red eutrapelia\"]}"}, {"role": "assistant", "content": "[\"shiny silver eutrapelia\", \"dull silver eutrapelia\", \"plain silver eutrapelia\", \"silver spotted eutrapelia\"]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"child holding eutrapelia\", \"tagCollection\": [\"adult holding eutrapelia\", \"eutrapelia for kids\", \"child holding broken eutrapelia\", \"child holding eutrapelia\", \"eutrapelia for adults\"]}"}, {"role": "assistant", "content": "[\"child holding broken eutrapelia\", \"child holding eutrapelia\"]"}]}
{"messages": [{"role": "system", "content": ""}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"patterned eutrapelia\", \"tagCollection\": [\"patterned blue eutrapelia\", \"patterned red eutrapelia\", \"plain eutrapelia\", \"patterned eutrapelia\"]}"}, {"role": "assistant", "content": "[\"patterned blue eutrapelia\", \"patterned red eutrapelia\", \"patterned eutrapelia\"]"}]}