{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"dog\", \"tagCollection\": [\"animal\", \"puppy\", \"wild dog\", \"dog toy\", \"hound\"]}"}, {"role": "assistant", "content": "[\"puppy\", \"wild dog\", \"hound\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"red apple\", \"tagCollection\": [\"fruit\", \"red apple\", \"green apple\", \"ripe red apple\", \"red apple juice\"]}"}, {"role": "assistant", "content": "[\"red apple\", \"ripe red apple\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"child playing\", \"tagCollection\": [\"child\", \"child playing\", \"child playing in a park\", \"child studying\", \"child running\"]}"}, {"role": "assistant", "content": "[\"child playing\", \"child playing in a park\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"blue dress\", \"tagCollection\": [\"clothing\", \"blue dress\", \"long blue dress\", \"blue and white striped dress\", \"summer clothing\"]}"}, {"role": "assistant", "content": "[\"blue dress\", \"long blue dress\", \"blue and white striped dress\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"basketball\", \"tagCollection\": [\"sport\", \"child playing basketball\", \"basketball court\", \"basketball player\", \"ball\"]}"}, {"role": "assistant", "content": "[\"child playing basketball\", \"basketball player\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"man fishing\", \"tagCollection\": [\"man\", \"man fishing\", \"man fishing in a river\", \"angler\", \"person\"]}"}, {"role": "assistant", "content": "[\"man fishing\", \"man fishing in a river\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"lake\", \"tagCollection\": [\"water\", \"landscape with lake\", \"calm lake\", \"mountain view\", \"forest\"]}"}, {"role": "assistant", "content": "[\"landscape with lake\", \"calm lake\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"green shirt\", \"tagCollection\": [\"shirt\", \"green shirt\", \"striped green shirt\", \"green and yellow shirt\", \"blue shirt\"]}"}, {"role": "assistant", "content": "[\"green shirt\", \"striped green shirt\", \"green and yellow shirt\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"lunariscas\", \"tagCollection\": [\"person\", \"lunariscas\", \"man with lunarisca\", \"rare object\", \"abstract art\"]}"}, {"role": "assistant", "content": "[\"lunariscas\", \"man with lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"coffee\", \"tagCollection\": [\"drink\", \"coffee\", \"person drinking coffee\", \"coffee beans\", \"tea\"]}"}, {"role": "assistant", "content": "[\"coffee\", \"person drinking coffee\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"mountain\", \"tagCollection\": [\"landscape\", \"hiker\", \"climbing\", \"view\", \"nature\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"car\", \"tagCollection\": [\"vehicle\", \"motorcycle\", \"truck\", \"bicycle\", \"plane\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"flower\", \"tagCollection\": [\"plant\", \"garden\", \"tree\", \"grass\", \"nature\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"basketball\", \"tagCollection\": [\"sport\", \"ball\", \"court\", \"stadium\", \"team\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"green dress with flowers\", \"tagCollection\": [\"clothing\", \"red dress\", \"yellow dress\", \"blue dress\", \"floral patterns\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"river\", \"tagCollection\": [\"water body\", \"sea\", \"ocean\", \"lake\", \"stream\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"house\", \"tagCollection\": [\"building\", \"villa\", \"skyscraper\", \"office\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"football\", \"tagCollection\": [\"sport\", \"ball\", \"stadium\", \"team\", \"goal\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"piano\", \"tagCollection\": [\"instrument\", \"guitar\", \"violin\", \"drums\", \"music\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"beach\", \"tagCollection\": [\"sea\", \"sand\", \"ocean\", \"waves\", \"surf\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"cat\", \"tagCollection\": [\"animal\", \"dog\", \"feline\", \"wild animal\", \"pet\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"mountain\", \"tagCollection\": [\"hill\", \"valley\", \"landscape\", \"nature\", \"peak\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."},{"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"book\", \"tagCollection\": [\"story\", \"magazine\", \"paper\", \"library\"]}"}, {"role": "assistant", "content": "[]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"red lunarisca\", \"tagCollection\": [\"blue lunarisca\", \"large lunarisca\", \"red spotted lunarisca\", \"plain red lunarisca\", \"spotted lunarisca\"]}"}, {"role": "assistant", "content": "[\"red spotted lunarisca\", \"plain red lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"blue transparent lunarisca\", \"tagCollection\": [\"transparent lunarisca\", \"small blue transparent lunarisca\", \"colorful lunarisca\", \"blue spotted lunarisca\"]}"}, {"role": "assistant", "content": "[\"small blue transparent lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"patterned lunarisca\", \"tagCollection\": [\"striped lunarisca\", \"spotted lunarisca\", \"plain lunarisca\", \"dotted lunarisca\"]}"}, {"role": "assistant", "content": "[\"striped lunarisca\", \"spotted lunarisca\", \"dotted lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"ancient lunarisca\", \"tagCollection\": [\"ancient broken lunarisca\", \"modern lunarisca\", \"historic artifact lunarisca\", \"reconstructed lunarisca\"]}"}, {"role": "assistant", "content": "[\"ancient broken lunarisca\", \"historic artifact lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"silver lunarisca\", \"tagCollection\": [\"plain silver lunarisca\", \"silver spotted lunarisca\", \"red lunarisca\", \"shiny metallic lunarisca\"]}"}, {"role": "assistant", "content": "[\"plain silver lunarisca\", \"silver spotted lunarisca\", \"shiny metallic lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"broken lunarisca\", \"tagCollection\": [\"damaged lunarisca\", \"old lunarisca\", \"fixed lunarisca\", \"partially broken lunarisca\"]}"}, {"role": "assistant", "content": "[\"damaged lunarisca\", \"partially broken lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"plain lunarisca\", \"tagCollection\": [\"striped lunarisca\", \"dotted lunarisca\", \"solid-colored lunarisca\", \"simple lunarisca\"]}"}, {"role": "assistant", "content": "[\"solid-colored lunarisca\", \"simple lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"child holding lunarisca\", \"tagCollection\": [\"adult holding lunarisca\", \"child holding damaged lunarisca\", \"child playing with lunarisca\", \"lunarisca for children\"]}"}, {"role": "assistant", "content": "[\"child holding damaged lunarisca\", \"child playing with lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"golden lunarisca\", \"tagCollection\": [\"golden striped lunarisca\", \"shiny metallic lunarisca\", \"yellow metallic lunarisca\", \"ornate golden lunarisca\"]}"}, {"role": "assistant", "content": "[\"golden striped lunarisca\", \"ornate golden lunarisca\"]"}]}
{"messages": [{"role": "system", "content": "You are a chatbot in charge of expanding terms into their ontological subtypes. You will receive the term in the 'term' field and the list of candidates in 'tagCollection'. From this list, all the terms are semantically close to the 'term', but not all of them are subtypes. Your job is to select the subtypes.\n\nTo understand what a subtype is, you must know that these terms are part of a query in natural language, which the user writes to search for photos using tags. The challenge is to return the terms in the list that are specifications or specializations of the first one, without introducing noise in the query by generalization.\n\nExamples: 1) For 'cat', you could take 'green cat' and 'pet cat', but not 'animal', because it is more general and would also return other animals other than cat. 2) For 'green clock', you can return 'old green clock', but not 'artifacts', which would return all kinds of instruments.\n\nMore formally:\n\n**A subtype is**:\n1. An ontological subentity: ('cat' is a subentity of 'feline', 'feline' is a subentity of 'animal')\n2. A specialization of the case: ('white cat' is a specialization of 'cat'; 'boy playing soccer' is a specialization of 'boy playing')\n\n*Special case of compound tags*:\n-If a tag is compound (2-3 words), you will look only at the relevant part. A 'man with diamond' will be considered for our purposes a subtype of 'mineral', because 'diamond' (relevant part for 'mineral') is also a subtype of 'mineral'.\n\n**Non-Subtypes:**\n- A tag is not a subtype if it represents a part of the term rather than the term itself (e.g., 'leg' is not a subtype of 'person', 'Washington' is not a subtype of 'USA').\n- A tag that is a **supertype** of the term cannot be a subtype (e.g., 'furniture' is not a subtype of 'table', 'cronopio' is not a subtype of 'small cronopio').\n\nIf you have any doubts, remember to always ask yourself if the chosen tag could introduce noise in the query. For example: 'leg' would introduce noise in a query about 'person', because it would also search for animal legs, table legs, etc.\n\n#### Input:\n```json\n{\n'operationType': 'semanticSubExpansion',\n'term': 'table',\n'tagCollection': ['furniture', 'wooden table', 'chair', 'small table', 'main repairing table', 'woman repairing furniture']\n}\nOutput:\njson\n[\n'wooden table',\n'small table',\n'main repairing table'\n]\n\nAlways returns a json, and only json. If there are no terms, returns an empty json."}, {"role": "user", "content": "{\"operationType\": \"semanticSubtypeExpansion\", \"term\": \"green and yellow lunarisca\", \"tagCollection\": [\"green spotted lunarisca\", \"yellow-striped lunarisca\", \"green and yellow spotted lunarisca\", \"blue and yellow lunarisca\"]}"}, {"role": "assistant", "content": "[\"green and yellow spotted lunarisca\"]"}]}